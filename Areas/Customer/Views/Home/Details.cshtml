@model Online_Shop.Models.Products
@{
    ViewData["Title"] = "Details";
}
@using Microsoft.AspNetCore.Http
@using Online_Shop.Utility
@inject IHttpContextAccessor IHttpContextAccessor
@{
    List<Products> products = IHttpContextAccessor.HttpContext.Session.Get<List<Products>>("products");
    Products product = null;
    if (products != null)
    {
        product = products.FirstOrDefault(x=> x.Id == Model.Id);
    }
}
<h1>Product Details</h1>
<form action="" method="post">
    <div class="p-4 rounded border row">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="col-8">
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Name"></label>
                </div>
                <div class="col-8">
                    <input readonly="readonly" asp-for="Name" class="form-control" />
                </div>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Price"></label>
                </div>
                <div class="col-8">
                    <input readonly="readonly" asp-for="Price" class="form-control" />
                </div>
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="ProductColor"></label>
                </div>
                <div class="col-8">
                    <input readonly="readonly" asp-for="ProductColor" class="form-control" />
                </div>
                <span asp-validation-for="ProductColor" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="ProductTypeId"></label>
                </div>
                <div class="col-8">
                    <input readonly="readonly" asp-for="ProductTypes.ProductType" class="form-control" />
                </div>
                <span asp-validation-for="ProductTypeId" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-4">

                </div>
                <div class="col-8">
                    @if (product != null)
                    {
                        <button type="submit" class="form-control btn btn-danger" asp-action="removecart" asp-route-id="@Model.Id" >Remove From Cart</button>
                    }
                    else
                    {
                        <input type="submit" class="form-control btn btn-secondary" value="Add To Cart" />
                    }
                </div>
            </div>
        </div>
        <div class="col-1"></div>
        <div class="col-3">
            @if (Model.Id != 0)
            {
                <img src="~/images/@Model.Image" alt="Alternate Text" style="width:100%; border-radius: 5px; border: 2px solid #808080" />
            }
            @if (Model.isAvailable)
            {
                <img src="~/images/instock.png" style="width: 100%;" />
            }
            else
            {
                <img src="~/images/notavailable.png" style="width: 100%; height: 100px" />
            }
        </div>

        <div class="form-group">
            <a asp-action="Index" class="btn btn-success">Back to List</a>
        </div>
    </div>
</form>
@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial.cshtml");}
}